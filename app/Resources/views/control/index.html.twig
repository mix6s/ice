{% extends 'control/layout.html.twig' %}

{% block body %}
    {{ source('control/vue/app-seasons.vue.twig') }}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>

		Vue.component('seasonModalContent', {
			template: '{{ source('control/vue/season-modal.vue.twig')|escape('js') }}',
			data: function () {
				return {
					year: (new Date()).getFullYear(),
					error: null
				}
			},
			computed:{
				years: function () {
					return (this.year - 1) + '/' + (this.year)
				}
			},
			methods: {
				incYear: function (data) {
					this.year++;
				},
				decYear: function () {
					this.year--;
				},
				save: function () {
					var $this = this;
					$.ajax({
						url: '/control/seasons/new',
						data: {year: $this.year},
						type: 'post',
						success: function (response) {
							app.$emit('new-season', response);
						},
						error: function (jqXHR) {
							$this.error = jqXHR.responseJSON.error ? jqXHR.responseJSON.error : 'Ошибка сервера';
						}
					});
				}
			}
		});

		Vue.component('seasonTeamModalContent', {
			template: '{{ source('control/vue/season-team-modal.vue.twig')|escape('js') }}',
			data: function () {
				return {
					year: (new Date()).getFullYear(),
					error: null
				}
			},
			computed:{
				years: function () {
					return (this.year - 1) + '/' + (this.year)
				}
			},
			methods: {
				initTypeHead: function () {
					$('#team').typeahead({
						source: [
							'asd',
							'asdds'
						],
					});
				}
			},
			mounted: function () {
				this.initTypeHead();
			}
		});

		Vue.component('modal', {
			template: '{{ source('control/vue/modal-layout.vue.twig')|escape('js') }}',
			data: function () {
				return {
					content: null
				}
			},
			methods: {
				show: function (data) {
					this.content = data;
					$('#modal').modal('show');
				},
				hide: function () {
					$('#modal').modal('hide');
				}
			},
			created: function () {
				this.$on('new-season', function (season) {
					this.hide();
				});
			}
		});

		var app = new Vue({
			el: '#app',
			data: {
				seasons: [],
				seasonCount: 0,
				teams: [],
				leagues: []
			},
			computed: {
				sortedSeasons: function () {
					return this.seasons.sort(function(a, b) {
						return parseInt(b.year) - parseInt(a.year);
					});
				}
			},
			methods: {
				showAddSeasonPopup: function () {
					this.$refs.modal.show('seasonModalContent');
				},
				showAddSeasonTeamPopup: function () {
					this.$refs.modal.show('seasonTeamModalContent');
				},
				load: function () {
					const $this = this;
					$.ajax({
						url: '/control/seasons',
						type: 'get',
						success: function (response) {
							$this.seasons = response;
						},
						complete: function (response) {

						}
					});
				}
			},
			created: function () {
				this.$on('new-season', function (season) {
					this.seasons.push(season);
					this.$refs.modal.hide();
				});
			},
			mounted: function () {
				this.load();
			}
		});
    </script>
{% endblock %}
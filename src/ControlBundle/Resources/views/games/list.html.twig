{% extends '@Control/layout.html.twig' %}

{% block body %}
    <div class="container" id="app">
        <div class="row mb-10">
            <div class="col-md-12">
                <button v-on:click="showAddGamePopup" class="btn btn-primary">Создать игру</button>
            </div>
        </div>
		<div class="row mb-10">
			<div class="col-xs-3 ">
				<div class="form-group">
					<input ref="fromDt" v-model="fromDt" placeholder="Начиная с даты" class="form-control">
				</div>
			</div>
			<div class="col-xs-3 ">
				<div class="form-group">
					<input ref="toDt" v-model="toDt" placeholder="Заканчивая датой" class="form-control">
				</div>
			</div>
			<div class="col-xs-3 ">
				<div class="form-group">
					<select ref="status" v-model="status" class="form-control">
						<option value="">Все</option>
						<option value="0">Не завершенные</option>
						<option value="1">Завершенные</option>
					</select>
				</div>
			</div>
			<div class="col-xs-3 ">
				<div class="form-group">
					<button v-on:click="applyFilters" class="btn btn-info">Применить</button>
				</div>
			</div>
		</div>
        <div class="row">
            <div v-for="game in games" class="col-sm-6">
				<game @bus="handle" :game="game"></game>
            </div>
        </div>
        <modal ref="modal" @bus="handle"></modal>
    </div>
{% endblock %}
{% block css %}
    {{ parent() }}
	<link href="{{ asset('backend/css/bootstrap-datetimepicker.min.css') }}" rel="stylesheet">
	<link href="{{ asset('backend/css/bootstrap-select.min.css') }}" rel="stylesheet">
	<link href="{{ asset('backend/css/ajax-bootstrap-select.min.css') }}" rel="stylesheet">
{% endblock %}
{% block javascripts %}
    {{ parent() }}
	<script src="{{ asset('backend/js/moment-with-locales.js') }}"></script>
	<script src="{{ asset('backend/js/bootstrap-datetimepicker.min.js') }}"></script>
	<script src="{{ asset('backend/js/bootstrap-select.min.js') }}"></script>
	<script src="{{ asset('backend/js/ajax-bootstrap-select.min.js') }}"></script>
    {{ include('@Control/vue/modal-layout.vue.twig') }}
    {{ include('@Control/games/vue/game.vue.twig') }}
    {{ include('@Control/games/vue/event.vue.twig') }}
    {{ include('@Control/games/vue/member-list.vue.twig') }}
    {{ include('@Control/games/vue/game-modal.vue.twig') }}
    <script>
		var app = new Vue({
			el: '#app',
			data: {
				games: [],
				toDt: '{{ filter.toDt ? filter.toDt.format('d.m.Y H:i') : '' }}',
				fromDt: '{{ filter.fromDt ? filter.fromDt.format('d.m.Y H:i') : '' }}',
				status: '{{ filter.status }}'
			},
			computed: {},
			methods: {
				showAddGamePopup: function () {
					this.$refs.modal.show('gameModal', {}, 'modal-lg');
				},
				setGames: function (games) {
					this.games = games.filter(function (game) {
						return !!game;
					})
				},
				applyFilters: function () {
                    const self = this;
                    $.ajax({
                        url: '/control/games',
                        data: {from_dt: self.fromDt, to_dt: self.toDt, status: self.status},
                        type: 'get',
                        success: function (response) {
                            self.setGames(response.games);
                        },
                        complete: function (response) {

                        }
                    });
                },
				handle: function (data) {
					this.$emit(data.name, data.value);
				}
			},
			created: function () {
				var self = this;
				self
					.$on('gameDeleted', function (game) {
						this.games = this.games.filter(function (gameA) {
							return gameA && gameA.id !== game.id;
						});
					})
					.$on('gameSaved', function (game) {
						var exist = false;
						for (index in self.games) {
							if (self.games[index] && self.games[index].id == game.id) {
								self.games[index] = game;
								exist = true;
								self.$forceUpdate();
								return;
							}
						}
						if (!exist) {
							self.games.push(game);
						}
					})
					.$on('showEditGameModal', function (game) {
						this.$refs.modal.show('gameModal', {game: game}, 'modal-lg');
					})
				;
			},
			mounted: function () {
                var self = this;
                self.applyFilters();

                $(self.$refs.toDt)
                    .datetimepicker({
                        locale: 'ru',
                    })
                    .on('dp.change', function (e) {
                       if (e.date) {
                            self.toDt = e.date.format("DD.MM.YYYY HH:mm");
                        }

                    })
                    .trigger('dp.change')
                ;
                $(self.$refs.fromDt)
                    .datetimepicker({
                        locale: 'ru',
                    })
                    .on('dp.change', function (e) {
                    	if (e.date) {
                            self.fromDt = e.date.format("DD.MM.YYYY HH:mm");
                        }

                    })
                    .trigger('dp.change')
                ;
			}
		});
    </script>
{% endblock %}